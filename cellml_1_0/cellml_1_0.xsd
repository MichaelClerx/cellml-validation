<?xml version="1.0" encoding="iso-8859-1"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:cellml="http://www.cellml.org/cellml/1.0#"
    targetNamespace="http://www.cellml.org/cellml/1.0#"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified">
   <xs:annotation>
    <xs:documentation>

This schema document provides partial validation of CellML 1.0 documents.

For an overview of the capabilities and limitations of this validation method,
please see

https://github.com/MichaelClerx/cellml-validation/tree/master/reports

    </xs:documentation>
  </xs:annotation>

  <!-- External schemas for MathML, RDF, and cmeta:id, used in lax validation -->
  <xs:import namespace="http://www.w3.org/1998/Math/MathML"
             schemaLocation="http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" />
  <xs:import namespace="http://www.cellml.org/metadata/1.0#"
             schemaLocation="http://cellml.org/specifications/xsd/cmeta-id.xsd" />

  <!-- CellML Identifiers -->
  <xs:simpleType name="identifier">
    <xs:restriction base="xs:string">
      <xs:pattern value="_*[a-zA-Z0-9][a-zA-Z0-9_]*" />
      <!--<xs:pattern value="\s*_*[a-zA-Z0-9][a-zA-Z0-9_]*\s*" />-->
    </xs:restriction>
  </xs:simpleType>

  <!-- Type for real number strings -->
  <!-- We could use `double` for this, but there is no number type defined in CellML -->
  <xs:simpleType name="real_number">
    <xs:restriction base="xs:string">
      <xs:pattern value="[+-]?((\.[0-9]+)|([0-9]+\.?[0-9]*))([eE][+-]?[0-9]+)?" />
      <!--<xs:pattern value="\s*[+-]?((\.[0-9]+)|([0-9]+\.?[0-9]*))([eE][+-]?[0-9]+)?\s*" />-->
    </xs:restriction>
  </xs:simpleType>

  <!-- Type for attributes having either "yes" or "no" as value -->
  <xs:simpleType name="yes_no">
    <xs:restriction base="xs:string">
      <xs:enumeration value="yes" />
      <xs:enumeration value="no" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Model element -->
  <xs:element name="model" type="cellml:model_type">
    <!-- Model keys -->
    <!-- Unique component names -->
    <xs:key name="component_name">
      <xs:selector xpath="cellml:component" />
      <xs:field xpath="@name" />
    </xs:key>
    <!-- Unique model units names -->
    <xs:unique name="units_name">
      <xs:selector xpath="cellml:units" />
      <xs:field xpath="@name" />
    </xs:unique>
    <!-- Component connections must name components -->
    <xs:keyref name="connect_component_1" refer="cellml:component_name">
      <xs:selector xpath="cellml:connection/cellml:map_components" />
      <xs:field xpath="@component_1" />
    </xs:keyref>
    <xs:keyref name="connect_component_2" refer="cellml:component_name">
      <xs:selector xpath="cellml:connection/cellml:map_components" />
      <xs:field xpath="@component_2" />
    </xs:keyref>
    <!-- Component connections can only be defined once (partial check) -->
    <xs:unique name="map_components">
      <xs:selector xpath="cellml:connection/cellml:map_components" />
      <xs:field xpath="@component_1" />
      <xs:field xpath="@component_2" />
    </xs:unique>
    <!-- Group component_refs must name components -->
    <!-- Note: This only works for direct children, not for nested ones! -->
    <xs:keyref name="group_components_root" refer="cellml:component_name">
      <xs:selector xpath="cellml:group/cellml:component_ref" />
      <xs:field xpath="@component" />
    </xs:keyref>
  </xs:element>

  <!-- Model type and component keys/keyrefs -->
  <xs:complexType name="model_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="units" type="cellml:units_type" />
      <xs:element name="component" type="cellml:component_type">
        <!-- Component keys -->
        <!-- Unique variable names within component -->
        <xs:key name="variable_name">
          <xs:selector xpath="cellml:variable" />
          <xs:field xpath="@name" />
        </xs:key>
        <!-- Variable_ref must name a variable from the same component -->
        <xs:keyref name="reaction_variables" refer="cellml:variable_name">
          <xs:selector xpath="cellml:reaction/cellml:variable_ref" />
          <xs:field xpath="@variable" />
        </xs:keyref>
        <!-- Role delta_variable must name a variable from the same component -->
        <xs:keyref name="delta_variables" refer="cellml:variable_name">
          <xs:selector xpath="cellml:reaction/cellml:variable_ref/cellml:role" />
          <xs:field xpath="@delta_variable" />
        </xs:keyref>
        <!-- Unique component units names -->
        <!-- Note: This is not a key, since the unit fields can refer to either
             a model or component unit, or a predefined base unit. -->
        <xs:unique name="component_units_name">
          <xs:selector xpath="cellml:units" />
          <xs:field xpath="@name" />
        </xs:unique>
        <!-- Reaction delta_variables can only be used once -->
        <xs:unique name="delta_variable">
          <xs:selector xpath="cellml:reaction/cellml:variable_ref/cellml:role" />
          <xs:field xpath="@delta_variable" />
        </xs:unique>
      </xs:element>
      <xs:element name="group" type="cellml:group_type">
        <!-- Named relationship_refs must be unique within a group -->
        <xs:unique name="named_relationships_within_a_group">
          <xs:selector xpath="cellml:relationship_ref" />
          <xs:field xpath="@relationship" />
          <xs:field xpath="@name" />
        </xs:unique>
      </xs:element>
      <xs:element name="connection" type="cellml:connection_type" />
      <!-- Allow any elements not in CellML (including tmp-documentation and rdf) -->
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" type="cellml:identifier" use="required" />
    <!-- Allow any attributes not in CellML (including cmeta:id) -->
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <!-- Component type -->
  <xs:complexType name="component_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="units" type="cellml:units_type" />
      <xs:element name="variable" type="cellml:variable_type" />
      <xs:element name="reaction" type="cellml:reaction_type">
        <!-- Reaction variables can only be defined once -->
        <xs:unique name="reaction_variable">
          <xs:selector xpath="cellml:variable_ref" />
          <xs:field xpath="@variable" />
        </xs:unique>
      </xs:element>
      <!-- Allow elements from other namespaces, including MathML. Use lax
           processing so that MathML might still be validated. -->
      <xs:any namespace="##other" processContents="lax" />
    </xs:choice>
    <xs:attribute name="name" type="cellml:identifier" use="required" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <!-- Variable type -->
  <xs:complexType name="variable_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" type="cellml:identifier" use="required" />
    <xs:attribute name="units" type="xs:string" use="required" />
    <xs:attribute name="initial_value" type="cellml:real_number" use="optional" />
    <xs:attribute name="public_interface" type="cellml:interface" use="optional" default="none" />
    <xs:attribute name="private_interface" type="cellml:interface" use="optional" default="none" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:simpleType name="interface">
    <xs:restriction base="xs:string">
      <xs:enumeration value="in" />
      <xs:enumeration value="out" />
      <xs:enumeration value="none" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Connection and mapping types -->
  <xs:complexType name="connection_type">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="map_components" type="cellml:map_components_type" minOccurs="1" maxOccurs="1" />
      <xs:element name="map_variables" type="cellml:map_variables_type" minOccurs="1" maxOccurs="unbounded" />
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="map_components_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="component_1" type="cellml:identifier" use="required" />
    <xs:attribute name="component_2" type="cellml:identifier" use="required" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="map_variables_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="variable_1" type="cellml:identifier" use="required" />
    <xs:attribute name="variable_2" type="cellml:identifier" use="required" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <!-- Unit types -->
  <xs:complexType name="units_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="unit" type="cellml:unit_type" />
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="name" type="cellml:identifier" use="required" />
    <xs:attribute name="base_units" type="cellml:yes_no" use="optional" default="no" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="unit_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="units" type="xs:string" use="required" />
    <xs:attribute name="prefix" type="cellml:unit_prefix" use="optional" default="0" />
    <xs:attribute name="exponent" type="cellml:real_number" use="optional" default="1.0" />
    <xs:attribute name="multiplier" type="cellml:real_number" use="optional" default="1.0" />
    <xs:attribute name="offset" type="cellml:real_number" use="optional" default="0.0" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:simpleType name="unit_prefix">
    <xs:union memberTypes="cellml:unit_prefix_string xs:integer" />
  </xs:simpleType>

  <xs:simpleType name="unit_prefix_string">
    <xs:restriction base="xs:string">
      <xs:enumeration value="yotta" />
      <xs:enumeration value="zetta" />
      <xs:enumeration value="exa" />
      <xs:enumeration value="peta" />
      <xs:enumeration value="tera" />
      <xs:enumeration value="giga" />
      <xs:enumeration value="mega" />
      <xs:enumeration value="kilo" />
      <xs:enumeration value="hecto" />
      <xs:enumeration value="deka" />
      <xs:enumeration value="deci" />
      <xs:enumeration value="centi" />
      <xs:enumeration value="milli" />
      <xs:enumeration value="micro" />
      <xs:enumeration value="nano" />
      <xs:enumeration value="pico" />
      <xs:enumeration value="femto" />
      <xs:enumeration value="atto" />
      <xs:enumeration value="zepto" />
      <xs:enumeration value="yocto" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Group and relationship types -->
  <xs:complexType name="group_type">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="relationship_ref" type="cellml:relationship_ref_type" minOccurs="1" />
      <xs:element name="component_ref" type="cellml:component_ref_type" minOccurs="1" />
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="relationship_ref_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <!-- Note: relationship is optional because an extension namespace relationship
         may be used instead -->
    <xs:attribute name="relationship" type="cellml:relationship" use="optional" />
    <xs:attribute name="name" type="cellml:identifier" use="optional" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="component_ref_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="component_ref" type="cellml:component_ref_type" />
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="component" type="cellml:identifier" use="required" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:simpleType name="relationship">
    <xs:restriction base="xs:string">
      <xs:enumeration value="containment" />
      <xs:enumeration value="encapsulation" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Reaction types -->
  <xs:complexType name="reaction_type">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="variable_ref" type="cellml:variable_ref_type" minOccurs="1">
        <xs:unique name="unique_role_direction_pairs">
          <xs:selector xpath="cellml:role" />
          <xs:field xpath="@role" />
          <xs:field xpath="@direction" />
        </xs:unique>
      </xs:element>
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="reversible" type="cellml:yes_no" use="optional" default="yes" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="variable_ref_type">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="role" type="cellml:role_type" minOccurs="1" />
      <xs:any namespace="##other" processContents="skip" />
    </xs:choice>
    <xs:attribute name="variable" type="cellml:identifier" use="required" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:complexType name="role_type">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <!-- Use lax processing for MathML validation -->
      <xs:any namespace="##other" processContents="lax" />
    </xs:choice>
    <xs:attribute name="role" type="cellml:species_role" use="required" />
    <xs:attribute name="delta_variable" type="cellml:identifier" use="optional" />
    <xs:attribute name="direction" type="cellml:reaction_direction" use="optional" default="forward" />
    <xs:attribute name="stoichiometry" type="cellml:real_number" use="optional" />
    <xs:anyAttribute namespace="##other" processContents="lax" />
  </xs:complexType>

  <xs:simpleType name="species_role">
    <xs:restriction base="xs:string">
      <xs:enumeration value="reactant" />
      <xs:enumeration value="product" />
      <xs:enumeration value="catalyst" />
      <xs:enumeration value="activator" />
      <xs:enumeration value="inhibitor" />
      <xs:enumeration value="modifier" />
      <xs:enumeration value="rate" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="reaction_direction">
    <xs:restriction base="xs:string">
      <xs:enumeration value="forward" />
      <xs:enumeration value="reverse" />
      <xs:enumeration value="both" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
