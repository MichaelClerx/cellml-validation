A2.1.1 CellML documents must be well-formed XML

A2.4 CellML elements must not contain character items other than whitespace

A2.5 Elements must be in CellML or MathML namespace

A2.6 Every element in the CellML namespace can contain an id attribute

A3.1.2 Identifiers are only letters, numbers, or underscores
A3.1.3 Identifiers must have at least one letter
A3.1.4 Identifiers must begin with a letter

A3.3.1 Integer strings are base 10
A3.3.2 Integer strings can be negative
A3.3.3 Integer strings only contain 0-9 and -

A3.4.1 Basic real number strings are base 10
A3.4.2 Basic real strings can be negative
A3.4.3 Basic real strings can have a decimal point
A3.4.4 Basic real strings only contain 0-9, ., and -

A3.5.1 Real number strings are base 10
A3.5.4 Real number strings can have an e or E
A3.5.5 If there's nothing after the e it counts as 0

B1.1 The top-level element must be a <model>

B1.2.1 A model must have a name attribute
B1.2.1 A model name must be an identifier
B1.2.2 A model may contain one or more component elements
B1.2.2 A model may contain one or more connection elements
B1.2.2 A model may contain an encapsulation element
B1.2.2 A model may contain one or more import elements
B1.2.2 A model may contain one or more units elements
B1.2.3 A model cannot contain more than one encapsulation element

B2.1.1 An import item must have an xlink:href attribute
B2.1.1 An import's xlink:href must be a valid locator attribute https://www.w3.org/TR/2001/REC-xlink-20010627/#link-locators
B2.1.2 An import may contain one or more import units elements
B2.1.2 An import may contain one or more import component elements
B2.1.3 The imported model must be different from the importing model

B3.1.1 An import units element (<units>) must have a name attribute
B3.1.1 An import units name attribute must be an identifier
B3.1.1 An import units name must be unique
B3.1.1 An import units name must not match the name of any units in the model
B3.1.2 An import units must have a units_ref attribute
B3.1.2 An import units units_ref must be an identifier
B3.1.2 An import units units_ref must match the name of a units or import units in the imported model
B3.1.2 An import units units_ref must be unique

B4.1.1 An import component element (<component>) must have a name attribute
B4.1.1 An import component name attribute must be an identifier
B4.1.1 An import component name must be unique
B4.1.1 An import component name must not match the name of any component in the model
B4.1.2 An import component must have a component_ref attribute
B4.1.2 An import component component_ref must be an identifier
B4.1.2 An import component component_ref must match the name of a component or import component in the imported model
B4.1.2 An import component component_ref must be unique

B5.1.1 A units element must have a name attribute
B5.1.1 A units name must be an identifier
B5.1.2 A units name must be unique
B5.1.2 A units name must not match the name of any import units elements
B5.1.3 A units name must not equal any of the built-in units
B5.1.4 A units element may contain one or more unit element children

B6.1.1 A unit element must have a units attribute
B6.1.1 A unit element's units attribute must be a valid units reference
B6.1.1.2 Units references must not be cyclical

B6.1.2 A units element may have a prefix, multiplier, or exponent attribute
B6.1.2.1 The prefix attribute must be an integer string or one of the prefixes in the table
B6.1.2.2 The multiplier must be a real number string
B6.1.2.3 The exponent must be a real number string

B7.1.1 A component element must have a name attribute
B7.1.1 A component name must be an identifier
B7.1.1 A component name must be unique
B7.1.1 A component name must not match the name of any component_ref in an import component
B7.1.2 A component may contain one or more variable elements

B7.1.2 A component may contain one or more reset elements
B7.1.2 A component may contain one or more mathml:math elements

B8.1.1.1 A variable element must have a name attribute
B8.1.1.1 A variable name must be an identifier
B8.1.1.1 A variable name must be unique within the component
B8.1.1.2 A variable element must have a units attribute
B8.1.1.2 A variable's units attribute must be an identifier
B8.1.1.2 A variable's units attribute must be a units reference

B8.1.2.1 A variable may contain an interface attribute
B8.1.2.1 An interface may be "public", "private", "public_and_private", or "none"
B8.1.2.2 A variable may have an initial_value attribute

B9.1.1.1 A reset must have a variable attribute
B9.1.1.1 A reset's variable attribute must reference a variable in the same component
B9.1.1.2 A reset must have a test_variable attribute
B9.1.1.2 A reset's tests_variable must reference a variable in the same component
B9.1.1.3 A reset must have an order attribute
B9.1.1.3 A reset's order must be an integer
B9.1.1.3 A reset's order must be unique for all resets with the same variable (including connected variables)

B9.1.2.1 A reset must contain exactly one test_value element
B9.1.2.2 A reset must contain exactly one reset_value element

B10.1.1 A test_value element must contain exactly on mathml:math element

B11.1.1 A reset_value element must contain exactly on mathml:math element

B12.1.1 A mathml:math must contain content MathML
B12.1.2 Only elements from the supported subset are allowed
B12.1.3 All mathml:ci elements must reference a variable in the same component
B12.1.4 All mathml:cn elements must have a cellml:units attribute
B12.1.4 The value of a cellml:units attribute must be a valid units reference
B12.1.5 All mathml:cn elements must be of type "real" or "e-notation"
B12.1.6 All mathml:cn elements must be base 10

B13.1.1 An encapsulation element must contain one or more component_ref elements

B14.1.1 A component_ref element must have a component attribute
B14.1.1 A component_ref's component must reference a component in the same model, or the name of an imported component
B14.1.2 A component_ref may contain further component_ref elements
B14.1.3 A component_ref whose parent is an encapsulation element must contain at least one component_ref element child

B15.1.1 A connection element must have a component_1 attribute
B15.1.1 A connection element's component_1 must refer to a component in the same model, or an imported component
B15.1.2 A connection element must have a component_2 attribute
B15.1.2 A connection element's component_2 must refer to a component in the same model, or an imported component
B15.1.2 A connection element's component_1 and component_2 attribute cannot have the same value
B15.1.3 For any two components in (or imported in) the model, there can be at most one connection
B15.1.4 A connection must contain one or more map_variables elements

B16.1.1 A map_variables element must contain a variable_1 attribute
B16.1.1 A map_variables variable_1 must reference a variable in component_1
B16.1.2 A map_variables element must contain a variable_2 attribute
B16.1.2 A map_variables variable_2 must reference a variable in component_2
B16.1.3 The pair (variable_1, variable_2) must be unique within each connection

C1.4 Connections cannot connect two variables twice
C1.5 The connection network must not contain any cycles
C1.6 Connected variables must have compatible units
C1.7 If two units differ by a scaling factor, this must be taken into account when evaluating the model's mathematics
C1.9.1 Connections between sibling components use the public interface
C1.9.2 In parent-child relations, the parent variable uses the private interface
C1.9.2 In parent-child relations, the child variable uses the public interface
C1.10 No other connections are allowed

C2 TODO

C4.1 A units reference must be an identifier.
C4.3 A units reference must be the name of units defined or imported in the model, or one of the built-in units.

C5.1.1 The prefix attribute has default value 0.
C5.1.1 If the prefix attribute is an integer, the "prefix value" is that integer.
C5.1.1 If the prefix attribute is a string, the "prefix value" is given by the prefix values table.
C5.1.2 The exponent attribute has default value 1.
C5.1.3 The multiplier attribute has default value 1.
C5.3.1 Empty units elements define a new base unit (with exponent 1)

C6.2 A component reference can be to the name of a component or of an imported component, in the same model.
C6.3 A component reference to a local component refers to that component.
C6.4 A component reference to an import component refers to the imported component.
C6.5 Importing imported components is allowed.

C7.1 A variable reference inside a component element, must be the name of a variable from that component.
C7.2 A variable reference anywhere else, must be linked to a component reference.

C8.1 An initial_value attribute must be either a real number string or a variable reference.

C9.1 Encapsulation hierarchy cannot be circular.

